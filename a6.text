import numpy as np

x = np.array(([1,1], [1,1], [1,1]), dtype=float)
y = np.array(([10],[20],[30]), dtype=float)
x = x/np.amax(x,axis=0)

def sigmoid(x):
    return(1/(1 + np.exp(-x)))

def derS(x):
    return x * (1-x)

epoch =1080
lr=0.1
inLN = 2
hidLN = 3

oN = 1

wh = np.random.uniform(size=(inLN, hidLN))
bh = np.random.uniform(size=(1, hidLN))
wout = np.random.uniform(size=(hidLN, oN))
bout=np.random.uniform(size=(1,oN))

for i in range(epoch):
    hinp1 = np.dot(x,wh)
    hinp=hinp1 + bh
    hlayer_act = sigmoid(hinp)
    outinp1=np.dot(hlayer_act,wout)
    outinp=outinp1 + bout
    output = sigmoid(outinp)

    EO = y - output
    outgrad = derS(output)
    d_out = EO * outgrad
    EH = d_out.dot(wout.T)
    hg = derS(hlayer_act)

    d_hl = EH * hg
    wout += hlayer_act.T.dot(d_out)

    bout += np.sum(d_out, axis=0, keepdims=True)
    wh += x.T.dot(d_hl)*lr


print(x,y,output)
